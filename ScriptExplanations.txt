*GENERAL SCRIPTS*

-PlayerController
/Assets/Script
This script is used in relation to anything that controls the player (mostly movement).
--PlayerMovement()
Generate player movement, manage player movement animation and player states.
--PlayerPickUp()
Functionality in picking up objects in the level.
--AlterMovementSpeed()
Functionality to change movement speed of the player to slow or sprinting

-PartyManager
/Assets/Script
This script is used in managing the underlying systems running during a level such as the timer, party meter value and 0 party meter..etc.
--PartyTime()
Create and manages timer for the party, also decides when another stage of the game is entered.
--EmptyPartyMeterCheck()
Create countdown before game ends if party meter is 0
--StageChange()
Controls and Spawns objects that is placed on a specific stage

-PartyEndManager
/Assets/Script
Manages and shows related data to the party end scene.
--Restart()
Restarts the level

-GameManager
/Assets/Script
Manages elementary systems of the game such as pausing the game, quitting the game etc.
--PauseGame()
Pauses the game while showing pause UI
--UnpauseGame()
Unpauses game.
--RestartGame()
Restart scene of the game.
--QuitGame()
Quits the game.



*TASKS SCRIPT*

-InteractTask
/Assets/Script/TaskScripts
Task where you need to come to the location and press the interact button, interact task could be either instant or continuous
--EventOccurCoroutine()
Starts the EventOccur() Coroutine function
--EventOccur()
Determines when the task will enter an activated state where the task needs the player's response and what happens when it entered that state.
--PlayerTaskInteract()
Function that determines what happens if player interacts with the task
--ContinuousActionCoroutine()
Starts ContinuousAction() Coroutine function determined by parameters
--StopContinuousActionCoroutine()
Stops ContinuousAction() Coroutine
--ContinuousAction()
Increment or decrement the party meter per second (Continuous task)
--InstantTaskCountdown()
Show countdown for instant tasks, if time runs out reduct party meter
--CheckStage()
Applies variable values according to what stage the task is in


-MusicPlayer
/Assets/Script/TaskScripts
Script that controls the overall functionality of the music player. Shapes data are also stored here.
--PlayerInteracted()
What happens if player interacts with the music player.
--MusicPlayerOff()
Restore movement, related states and remove music player UI
--ButtonDownColorChange()
Coroutine for changing arrow color be more intuitive

-MusicRequestTask
/Assets/Script/TaskScripts
Starting point for the music request task that have a relationship with the MusicPlayer script. Determines the state of the task, UI, influencing the party meter.
--EventOccurCoroutine()
Starts the EventOccur() Coroutine function.
--EventOccur()
Determines when the task will enter an activated state where the task needs the player's response and what happens when it entered that state.
--PlayerTaskInteract()
Function that determines what happens if player interacts with the task
--InitialTaskCountdown()
The countdown that occurs if the task requires the player's attention so the player never interacts with the task yet.
--TaskActivatedCountdown()
The countdown that occurs when the task is already interacted with and active.
--GetRandomShape()
Get random shape from MusicPlayer script, to show as npc task request
--MusicRequestSuccess()
Function if task is successful
--MusicRequestFail()
Function if task is failed
--CheckStage()
Applies variable values according to what stage the task is in


-SkeletonPileTask
/Assets/Script/SkeletonPileTask
Task where a skeleton guy turns into a pile of skeleton and we need to sweep him with a broom.
--EventOccurCoroutine()
Starts the EventOccur() Coroutine function
--EventOccur()
Determines when the task will enter an activated state where the task needs the player's response and what happens when it entered that state.
--PlayerTaskInteract()
Function that determines what happens if player interacts with the task
--ContinuousActionCoroutine()
Starts ContinuousAction() Coroutine function determined by parameters
--StopContinuousActionCoroutine()
Stops ContinuousAction() Coroutine
--ContinuousAction()
Increment or decrement the party meter per second (Continuous task)
--CheckStage()
Applies variable values according to what stage the task is in


-DiscoBallTask
/Assets/Script/TaskScripts
Continuous task where a disco ball can be broken or running well.
--EventOccurCoroutine()
Starts the EventOccur() Coroutine function
--EventOccur()
Determines when the task will enter an activated state where the task needs the player's response and what happens when it entered that state.
--ContinuousActionCoroutine()
Starts ContinuousAction() Coroutine function determined by parameters
--StopContinuousActionCoroutine()
Stops ContinuousAction() Coroutine
--ContinuousAction()
Increment or decrement the party meter per second (Continuous task)
--CheckStage()
Applies variable values according to what stage the task is in

-DiscoBallSwitch
/Assets/Script/TaskScripts
The switch to fix the disco ball
--PlayerInteract()
Interact with the switch and fix the disco ball.






**Change Memo(Yibo)
oct 22 
- added slow and fast mode, with control of player and collision
- changed the usability of music player, reversed the control logic from previous one.
- added camera follow mode to test the feasiablity
- Test version have infinite score (min value 2000)





